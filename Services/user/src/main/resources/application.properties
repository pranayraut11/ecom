################ Keycloak ############
keycloak.resource = user-service
keycloak.credentials.secret = s7Isa5HJrCyOhOQcbronywW5LAMjuPNR


auth.grantType = password
auth.realm = ecom
auth.server.host = keycloak.local
auth.admin.clientId = admin-cli
auth.admin.clientSecret = QAsyatkW0Z8joE8oO6DnYj5Co7X00RKa
auth.admin.username = raut.pranay11@gmail.com
auth.admin.password = 123
auth.service.clientId = ${keycloak.resource}
auth.service.clientSecret = ${keycloak.credentials.secret}

############## Database #################
spring.data.mongodb.authentication-database=admin
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
spring.data.mongodb.uri=mongodb://127.0.0.1:27017/?compressors=zlib&readPreference=primary&gssapiServiceName=mongodb&appname=MongoDB%20Compass&ssl=false
spring.data.mongodb.database=user_db
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto= update

logging.level.org.springframework=info

####### Enable/Disable API security
security.enabled = true
########################### security details ##################
auth.client-id = user-service
auth.client-secret = 9V0zChkiOPngT4hphaWZ8QRXlLE6m3d8
auth.client-uri = http://localhost:8080/realms/ecom

spring.security.oauth2.client.provider.ecom.issuer-uri={auth.client-uri}
spring.security.oauth2.client.registration.ecom.client-id={auth.client-id}
spring.security.oauth2.client.registration.ecom.client-secret={auth.client-secret}
spring.security.oauth2.client.registration.ecom.scope=openid
spring.security.oauth2.client.registration.ecom.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.ecom.redirect-uri=http://localhost:9090/login/oauth2/code/employee-management-api
